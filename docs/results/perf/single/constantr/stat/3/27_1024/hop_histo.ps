%!PS-Adobe-2.0
%%Title: hop_histo.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Mon May 18 13:45:39 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hop_histo.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (huybui)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon May 18 13:45:39 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
336 0 M
63 0 V
7031 0 M
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
252 0 M
( 1) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 560 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
252 560 M
( 2) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 1120 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 4) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 1680 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 8) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 2240 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 16) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 2799 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 32) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 3359 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 64) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 3919 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 128) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 4479 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 256) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
336 5039 M
63 0 V
6632 0 R
-63 0 V
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
-6716 0 R
( 512) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
945 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(1) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
1553 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(2) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
2162 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(3) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
2771 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(4) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
3379 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(5) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
3988 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(6) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
4596 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(7) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
5205 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(8) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
5814 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(9) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
6422 0 M
0 63 V
0 4976 R
0 -63 V
/Helvetica findfont 230 scalefont setfont
/vshift -76 def
0 -5116 R
(10) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
1.000 UL
LTb
336 5039 N
336 0 L
7031 0 L
0 5039 V
-6695 0 V
Z stroke
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
-238 2519 M
currentpoint gsave translate -270 rotate 0 0 M
(Number of paths) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LTb
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
3683 -350 M
(Number of hops) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LTb
/Helvetica findfont 220 scalefont setfont
/vshift -73 def
3683 5249 M
(Distribution of number of hops for paths) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
1.00 0.00 0.00 C /Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
6380 4858 M
(Optimization) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LT0
1.00 0.00 0.00 C 1.000 6464 4799 399 118 BoxColFill
LCb setrgbcolor
6464 4799 N
399 0 V
0 118 V
-399 0 V
0 -118 V
Z stroke
LT0
1.00 0.00 0.00 C 1.000 1438 0 110 888 BoxColFill
LCb setrgbcolor
1438 0 N
0 887 V
109 0 V
1547 0 L
1438 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 2046 0 111 1861 BoxColFill
LCb setrgbcolor
2046 0 N
0 1860 V
110 0 V
2156 0 L
2046 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 2655 0 110 3861 BoxColFill
LCb setrgbcolor
2655 0 N
0 3860 V
109 0 V
2764 0 L
2655 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 3264 0 110 4812 BoxColFill
LCb setrgbcolor
3264 0 N
0 4811 V
109 0 V
3373 0 L
3264 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 3872 0 111 4930 BoxColFill
LCb setrgbcolor
3872 0 N
0 4929 V
110 0 V
3982 0 L
3872 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 4481 0 110 4418 BoxColFill
LCb setrgbcolor
4481 0 N
0 4417 V
109 0 V
4590 0 L
4481 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 5089 0 111 3499 BoxColFill
LCb setrgbcolor
5089 0 N
0 3498 V
110 0 V
5199 0 L
5089 0 L
Z stroke
LT0
1.00 0.00 0.00 C 1.000 5698 0 111 2534 BoxColFill
LCb setrgbcolor
5698 0 N
0 2533 V
110 0 V
5808 0 L
5698 0 L
Z stroke
LT0
1.00 0.00 0.00 C % End plot #1
% Begin plot #2
1.000 UL
LT1
0.00 0.00 1.00 C /Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
6380 4622 M
(Heuristcs Max Load = 4) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LT1
0.00 0.00 1.00 C 1.000 6464 4563 399 118 BoxColFill
LCb setrgbcolor
6464 4563 N
399 0 V
0 118 V
-399 0 V
0 -118 V
Z stroke
LT1
0.00 0.00 1.00 C 1.000 951 0 110 561 BoxColFill
LCb setrgbcolor
951 0 N
0 560 V
109 0 V
1060 0 L
951 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 1559 0 111 1776 BoxColFill
LCb setrgbcolor
1559 0 N
0 1775 V
110 0 V
1669 0 L
1559 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 2168 0 111 3058 BoxColFill
LCb setrgbcolor
2168 0 N
0 3057 V
110 0 V
2278 0 L
2168 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 2777 0 110 4182 BoxColFill
LCb setrgbcolor
2777 0 N
0 4181 V
109 0 V
2886 0 L
2777 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 3385 0 111 4499 BoxColFill
LCb setrgbcolor
3385 0 N
0 4498 V
110 0 V
3495 0 L
3385 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 3994 0 110 4316 BoxColFill
LCb setrgbcolor
3994 0 N
0 4315 V
109 0 V
4103 0 L
3994 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 4603 0 110 3875 BoxColFill
LCb setrgbcolor
4603 0 N
0 3874 V
109 0 V
4712 0 L
4603 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 5211 0 111 3161 BoxColFill
LCb setrgbcolor
5211 0 N
0 3160 V
110 0 V
5321 0 L
5211 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 5820 0 110 2188 BoxColFill
LCb setrgbcolor
5820 0 N
0 2187 V
109 0 V
5929 0 L
5820 0 L
Z stroke
LT1
0.00 0.00 1.00 C 1.000 6428 0 111 561 BoxColFill
LCb setrgbcolor
6428 0 N
0 560 V
110 0 V
6538 0 L
6428 0 L
Z stroke
LT1
0.00 0.00 1.00 C % End plot #2
% Begin plot #3
1.000 UL
LT2
0.00 1.00 0.00 C /Helvetica findfont 140 scalefont setfont
LCb setrgbcolor
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
6380 4386 M
(MPI_Alltoallv) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LT2
0.00 1.00 0.00 C 1.000 6464 4327 399 118 BoxColFill
LCb setrgbcolor
6464 4327 N
399 0 V
0 118 V
-399 0 V
0 -118 V
Z stroke
LT2
0.00 1.00 0.00 C 1.000 1072 0 111 1301 BoxColFill
LCb setrgbcolor
1072 0 N
0 1300 V
110 0 V
1182 0 L
1072 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 1681 0 111 2601 BoxColFill
LCb setrgbcolor
1681 0 N
0 2600 V
110 0 V
1791 0 L
1681 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 2290 0 110 3308 BoxColFill
LCb setrgbcolor
2290 0 N
0 3307 V
109 0 V
2399 0 L
2290 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 2898 0 111 3688 BoxColFill
LCb setrgbcolor
2898 0 N
0 3687 V
110 0 V
3008 0 L
2898 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 3507 0 111 3827 BoxColFill
LCb setrgbcolor
3507 0 N
0 3826 V
110 0 V
3617 0 L
3507 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 4116 0 110 3737 BoxColFill
LCb setrgbcolor
4116 0 N
0 3736 V
109 0 V
4225 0 L
4116 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 4724 0 111 3409 BoxColFill
LCb setrgbcolor
4724 0 N
0 3408 V
110 0 V
4834 0 L
4724 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 5333 0 110 2800 BoxColFill
LCb setrgbcolor
5333 0 N
0 2799 V
109 0 V
5442 0 L
5333 0 L
Z stroke
LT2
0.00 1.00 0.00 C 1.000 5942 0 110 1776 BoxColFill
LCb setrgbcolor
5942 0 N
0 1775 V
109 0 V
6051 0 L
5942 0 L
Z stroke
LT2
0.00 1.00 0.00 C % End plot #3
1.000 UL
LTb
336 5039 N
336 0 L
7031 0 L
0 5039 V
-6695 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
